## Peer review facilitates package publishing

### [rOpenSci](https://ropensci.org/)

#### aims and goals:

rOpenSci fosters a culture that values open and reproducible research using shared data and reusable software.

We do this by:
- Creating technical infrastructure in the form of carefully vetted, staff- and community-contributed R software tools that lower barriers to working with scientific data sources on the web

- Creating social infrastructure through a welcoming and diverse community

- Making the right data, tools and best practices more discoverable

- Building capacity of software users and developers and fostering a sense of pride in their work

- Promoting advocacy for a culture of data sharing and reusable software.

*Source: <https://ropensci.org/about/>*

### rOpenSci's open peer review process

- Authors submit complete R packages to rOpenSci.

- Editors check that packages fit into rOpenSci's scope, run a series of automated tests to ensure a baseline of code quality and completeness, and then assign two independent reviewers.

- Reviewers comment on usability, quality, and style of software code as well as documentation.

- Authors make changes in response.

- Once reviewers are satisfied with the updates, the package receives a badge of approval and joins rOpenSci's suite of approved pacakges.

- Happens openly, and publicly on GitHub in issues.

- Process is quite iterative and fast. After reviewers post a first round of extensive reviews, authors and reviewers chat in an informal back-and-forth, only lightly moderated by an editor.

*Source: <https://numfocus.org/blog/how-ropensci-uses-code-review-to-promote-reproducible-science>*

###  rOpenSci's Guidance and Standards

What aspects of a package are reviewed?

- high-level best practices:
    - is the code reusable (e.g. follow the DRY principle)?
    - are sufficient edge cases tested?
    - etc

- low-level standards:
    - are naming conventions for functions followed?
    - did they make the best choices of dependencies for the package's intended tasks?
    - etc

*Source: <https://numfocus.org/blog/how-ropensci-uses-code-review-to-promote-reproducible-science>*

###  rOpenSci's Review Guidebook

- <https://devguide.ropensci.org/>

### rOpenSci-reviewed packages:

- <https://ropensci.org/packages/>

### Let's look at an rOpenSci review!

All packages currently under review: <https://github.com/ropensci/software-review/issues>

- [Review of tidypmc](https://github.com/ropensci/software-review/issues/290)


### What do you get for having your package reviewed by rOpenSci?

- valuable feedback from the knowledgeable editors and reviewers
- help with package maintenance and submission of your package to CRAN
- promotion of your package on their website, blog and social media
- packages that have a short accompanying paper can be automatically submitted to [JOSS](https://joss.theoj.org/) and fast-tracked for publication.

## [pyOpenSci](https://www.pyopensci.org/)

- A new organization, modelled after rOpenSci
- scope is Python packages
- First package submitted to pyOpenSci was in May 2019
